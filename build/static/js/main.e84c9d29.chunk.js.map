{"version":3,"sources":["components/Card.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Card","_ref","tilltalsnamn","efternamn","img","status","missions","year_born","react_default","a","createElement","Col","sm","className","src","alt","length","axios","require","Main","state","personlista","tabActive","errorLoading","createCard","item","index","components_Card","bild_url_80","personuppdrag","uppdrag","fodd_ar","key","renderTab","party","Tab","eventKey","title","_this","map","parti","sortByMissions","sortedList","sort","b","setState","sortByOldest","sortByYoungest","sortByName","_this2","this","storage","localStorage","getItem","JSON","parse","get","then","res","data","person","setItem","stringify","catch","err","console","log","Row","smOffset","Tabs","activeKey","onSelect","handleTabChange","bind","id","animation","bsStyle","ButtonGroup","Button","bsSize","onClick","Alert","Component","App","Grid","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e84c9d29.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Col} from 'react-bootstrap';\r\nimport './card.css';\r\n\r\nconst Card = ({tilltalsnamn, efternamn, img, status, missions, year_born})  => (\r\n  <Col sm={3} className=\"card\">\r\n    <div className=\"text-center\">\r\n      <img src={img} alt=\"foto\"/>\r\n      <h4>{tilltalsnamn + ' ' + efternamn}</h4>\r\n    </div>\r\n\r\n    <ul className=\"list-unstyled\">\r\n      <li><b>Född:</b> {year_born}</li>\r\n      <li><b>Status:</b> {status}</li>\r\n      <li><b>Antal uppdrag:</b> {missions.length}</li>\r\n    </ul>\r\n  </Col>\r\n);\r\n\r\nexport default Card;\r\n\r\n","import React, { Component } from 'react';\r\nimport {Row, Col, Tabs, Tab, Alert, ButtonGroup, Button} from 'react-bootstrap';\r\nimport './main.css';\r\nimport Card from './Card';\r\nconst axios = require('axios');\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    personlista: null,\r\n    tabActive: 1,\r\n    errorLoading: false\r\n  };\r\n\r\n  componentDidMount(){\r\n    //TODO: Update the localstorage if the data is older than (?)\r\n\r\n    //Stores the data in localstorage to minimize number of api calls and make application faster\r\n    const storage = localStorage.getItem('personlista');\r\n\r\n    if(storage !== null){\r\n      this.setState({\r\n        personlista: JSON.parse(storage)\r\n      })\r\n    }else{\r\n      axios.get('http://data.riksdagen.se/personlista/?utformat=json')\r\n        .then(res =>{\r\n\r\n          //Sort by name\r\n          let sortedList = res.data.personlista.person.sort((a,b) =>{\r\n            return (a.tilltalsnamn > b.tilltalsnamn) ? 1 : b.tilltalsnamn > a.tilltalsnamn ? -1 : 0;\r\n          });\r\n\r\n          //Save to state & localstorage\r\n          this.setState({personlista: sortedList});\r\n          localStorage.setItem('personlista', JSON.stringify(sortedList));\r\n        })\r\n        .catch(err => {\r\n          this.setState({errorLoading: true});\r\n          console.log(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  handleTabChange(key) {\r\n    this.setState({tabActive: key});\r\n  }\r\n  createCard = (item, index) =>{\r\n    return <Card tilltalsnamn={item.tilltalsnamn}\r\n                 efternamn={item.efternamn}\r\n                 img={item.bild_url_80}\r\n                 status={item.status}\r\n                 missions={item.personuppdrag.uppdrag}\r\n                 year_born={item.fodd_ar}\r\n                 key={index}/>\r\n  };\r\n\r\n  renderTab = (party, index) =>{\r\n    return(\r\n    <Tab eventKey={index} title={party} className=\"tab-wrapper\">\r\n      {\r\n        this.state.personlista.map((item, index) =>{\r\n          return item.parti === party && this.createCard(item, index)\r\n        })\r\n      }\r\n    </Tab>)\r\n  };\r\n\r\n  sortByMissions = () =>{\r\n    let sortedList = this.state.personlista.sort((a, b) =>{\r\n      return b.personuppdrag.uppdrag.length - a.personuppdrag.uppdrag.length;\r\n    });\r\n    this.setState({personlista: sortedList});\r\n  };\r\n  sortByOldest = () =>{\r\n    let sortedList = this.state.personlista.sort((a, b) =>{\r\n      return a.fodd_ar - b.fodd_ar;\r\n    });\r\n    this.setState({personlista: sortedList});\r\n  };\r\n  sortByYoungest = () =>{\r\n    let sortedList = this.state.personlista.sort((a, b) =>{\r\n      return b.fodd_ar - a.fodd_ar;\r\n    });\r\n    this.setState({personlista: sortedList});\r\n  };\r\n  sortByName = () =>{\r\n    let sortedList = this.state.personlista.sort((a, b) =>{\r\n      return (a.tilltalsnamn > b.tilltalsnamn) ? 1 : b.tilltalsnamn > a.tilltalsnamn ? -1 : 0;\r\n    });\r\n    this.setState({personlista: sortedList});\r\n  };\r\n  render() {\r\n    return (\r\n        <Row>\r\n          <Col sm={10} smOffset={1}>\r\n            {this.state.personlista !== null ?\r\n            <Tabs\r\n              activeKey={this.state.tabActive}\r\n              onSelect={this.handleTabChange.bind(this)}\r\n              id=\"party-tab\"\r\n              animation={false}\r\n              bsStyle=\"pills\"\r\n            >\r\n              <div className=\"sort-buttons\">\r\n                Filtrera på: {' '}\r\n                <ButtonGroup>\r\n                  <Button bsSize=\"small\" onClick={this.sortByMissions.bind(this)}>Antal uppdrag</Button>\r\n                  <Button bsSize=\"small\" onClick={this.sortByOldest.bind(this)}>Äldst</Button>\r\n                  <Button bsSize=\"small\" onClick={this.sortByYoungest.bind(this)}>Yngst</Button>\r\n                  <Button bsSize=\"small\" onClick={this.sortByName.bind(this)}>Rensa filter</Button>\r\n                </ButtonGroup>\r\n              </div>\r\n\r\n              {this.renderTab(\"V\", 1)}\r\n              {this.renderTab(\"S\", 2)}\r\n              {this.renderTab(\"MP\", 3)}\r\n              {this.renderTab(\"C\", 4)}\r\n              {this.renderTab(\"KD\", 5)}\r\n              {this.renderTab(\"L\", 6)}\r\n              {this.renderTab(\"M\", 7)}\r\n              {this.renderTab(\"SD\", 8)}\r\n            </Tabs>\r\n              : this.state.errorLoading === true && (<Alert className=\"text-center\" bsStyle=\"danger\">Något gick fel. Försök igen senare</Alert>)\r\n            }\r\n          </Col>\r\n        </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport {Grid} from 'react-bootstrap';\nimport Main from './components/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Grid>\n          <Main />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}